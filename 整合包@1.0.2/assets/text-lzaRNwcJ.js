var u=Object.defineProperty,m=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var f=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable;var o=(t,e,a)=>e in t?u(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a,r=(t,e)=>{for(var a in e||(e={}))f.call(e,a)&&o(t,a,e[a]);if(l)for(var a of l(e))y.call(e,a)&&o(t,a,e[a]);return t},i=(t,e)=>m(t,d(e));import{aA as _,bc as g,a9 as p,bW as x,aB as S,v as b,bw as C,o as v,c as w,w as z,af as B,ag as h,b as k,a6 as E,ae as T,aC as D,aD as N}from"./index-DKVio5DX.js";const P=_({type:{type:String,values:["primary","success","info","warning","danger",""],default:""},size:{type:String,values:g,default:""},truncated:{type:Boolean},lineClamp:{type:[String,Number]},tag:{type:String,default:"span"}}),A=p({name:"ElText"}),F=p(i(r({},A),{props:P,setup(t){const e=t,a=x(),s=S("text"),c=b(()=>[s.b(),s.m(e.type),s.m(a.value),s.is("truncated",e.truncated),s.is("line-clamp",!C(e.lineClamp))]);return(n,K)=>(v(),w(T(n.tag),{class:h(k(c)),style:E({"-webkit-line-clamp":n.lineClamp})},{default:z(()=>[B(n.$slots,"default")]),_:3},8,["class","style"]))}}));var I=D(F,[["__file","text.vue"]]);const $=N(I);export{$ as E};
